{"ast":null,"code":"import \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.array.iterator.js\";\nimport \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.promise.js\";\nimport \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.object.assign.js\";\nimport \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.promise.finally.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { createApp } from \"vue\";\nimport { createStore } from \"vuex\";\nimport App from \"./App.vue\";\nvar counterModule = {\n  namespaced: true,\n  //separa el modulo del resto del store\n  state: function state() {\n    return {\n      counter: 0\n    };\n  },\n  mutations: {\n    increment: function increment(state) {\n      state.counter++;\n    },\n    increase: function increase(state, payload) {\n      console.log(state); //el payload puede ser cualquier tipo de dato, objeto, variable, array, etc\n\n      state.counter = state.counter + payload.value;\n    }\n  },\n  actions: {\n    increment: function increment(context) {\n      setTimeout(function () {\n        context.commit(\"increment\");\n      }, 2000);\n    },\n    increase: function increase(context, payload) {\n      console.log(context);\n      setTimeout(function () {\n        context.commit(\"increase\", payload);\n      }, 2000);\n    }\n  },\n  getters: {\n    finalCounter: function finalCounter(state) {\n      return state.counter;\n    },\n    // el _ se usa para decir que se necesitan dos argumentos pero solo se usa el 2do\n    normalizedCounter: function normalizedCounter(_, getters) {\n      var finalCounter = getters.finalCounter;\n\n      if (finalCounter < 0) {\n        return 0;\n      }\n\n      if (finalCounter > 100) {\n        return 100;\n      }\n\n      return finalCounter;\n    }\n  }\n};\nvar store = createStore({\n  modules: {\n    numbers: counterModule\n  },\n  state: function state() {\n    return {\n      isLoggedIn: false\n    };\n  },\n  mutations: {\n    setAuth: function setAuth(state, payload) {\n      state.isLoggedIn = payload.isAuth;\n    }\n  },\n  //async code\n  actions: {\n    login: function login(context) {\n      context.commit(\"setAuth\", {\n        isAuth: true\n      });\n    },\n    logout: function logout(context) {\n      context.commit(\"setAuth\", {\n        isAuth: false\n      });\n    }\n  },\n  getters: {\n    userIsAuthenticated: function userIsAuthenticated(state) {\n      return state.isLoggedIn;\n    }\n  }\n});\nvar app = createApp(App);\napp.use(store);\napp.mount(\"#app\");","map":{"version":3,"names":["createApp","createStore","App","counterModule","namespaced","state","counter","mutations","increment","increase","payload","console","log","value","actions","context","setTimeout","commit","getters","finalCounter","normalizedCounter","_","store","modules","numbers","isLoggedIn","setAuth","isAuth","login","logout","userIsAuthenticated","app","use","mount"],"sources":["/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/src/main.js"],"sourcesContent":["import { createApp } from \"vue\";\nimport { createStore } from \"vuex\";\n\nimport App from \"./App.vue\";\n\nconst counterModule = {\n  namespaced: true, //separa el modulo del resto del store\n  state() {\n    return {\n      counter: 0,\n    };\n  },\n  mutations: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, payload) {\n      console.log(state);\n      //el payload puede ser cualquier tipo de dato, objeto, variable, array, etc\n      state.counter = state.counter + payload.value;\n    },\n  },\n  actions: {\n    increment(context) {\n      setTimeout(function () {\n        context.commit(\"increment\");\n      }, 2000);\n    },\n    increase(context, payload) {\n      console.log(context);\n      setTimeout(function () {\n        context.commit(\"increase\", payload);\n      }, 2000);\n    },\n  },\n  getters: {\n    finalCounter(state) {\n      return state.counter;\n    },\n    // el _ se usa para decir que se necesitan dos argumentos pero solo se usa el 2do\n    normalizedCounter(_, getters) {\n      const finalCounter = getters.finalCounter;\n      if (finalCounter < 0) {\n        return 0;\n      }\n      if (finalCounter > 100) {\n        return 100;\n      }\n      return finalCounter;\n    },\n  },\n};\n\nconst store = createStore({\n  modules: {\n    numbers: counterModule,\n  },\n  state() {\n    return {\n      isLoggedIn: false,\n    };\n  },\n  mutations: {\n    setAuth(state, payload) {\n      state.isLoggedIn = payload.isAuth;\n    },\n  },\n  //async code\n  actions: {\n    login(context) {\n      context.commit(\"setAuth\", { isAuth: true });\n    },\n    logout(context) {\n      context.commit(\"setAuth\", { isAuth: false });\n    },\n  },\n  getters: {\n    userIsAuthenticated(state) {\n      return state.isLoggedIn;\n    },\n  },\n});\n\nconst app = createApp(App);\n\napp.use(store);\n\napp.mount(\"#app\");\n"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,IAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,IADQ;EACF;EAClBC,KAFoB,mBAEZ;IACN,OAAO;MACLC,OAAO,EAAE;IADJ,CAAP;EAGD,CANmB;EAOpBC,SAAS,EAAE;IACTC,SADS,qBACCH,KADD,EACQ;MACfA,KAAK,CAACC,OAAN;IACD,CAHQ;IAITG,QAJS,oBAIAJ,KAJA,EAIOK,OAJP,EAIgB;MACvBC,OAAO,CAACC,GAAR,CAAYP,KAAZ,EADuB,CAEvB;;MACAA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,GAAgBI,OAAO,CAACG,KAAxC;IACD;EARQ,CAPS;EAiBpBC,OAAO,EAAE;IACPN,SADO,qBACGO,OADH,EACY;MACjBC,UAAU,CAAC,YAAY;QACrBD,OAAO,CAACE,MAAR,CAAe,WAAf;MACD,CAFS,EAEP,IAFO,CAAV;IAGD,CALM;IAMPR,QANO,oBAMEM,OANF,EAMWL,OANX,EAMoB;MACzBC,OAAO,CAACC,GAAR,CAAYG,OAAZ;MACAC,UAAU,CAAC,YAAY;QACrBD,OAAO,CAACE,MAAR,CAAe,UAAf,EAA2BP,OAA3B;MACD,CAFS,EAEP,IAFO,CAAV;IAGD;EAXM,CAjBW;EA8BpBQ,OAAO,EAAE;IACPC,YADO,wBACMd,KADN,EACa;MAClB,OAAOA,KAAK,CAACC,OAAb;IACD,CAHM;IAIP;IACAc,iBALO,6BAKWC,CALX,EAKcH,OALd,EAKuB;MAC5B,IAAMC,YAAY,GAAGD,OAAO,CAACC,YAA7B;;MACA,IAAIA,YAAY,GAAG,CAAnB,EAAsB;QACpB,OAAO,CAAP;MACD;;MACD,IAAIA,YAAY,GAAG,GAAnB,EAAwB;QACtB,OAAO,GAAP;MACD;;MACD,OAAOA,YAAP;IACD;EAdM;AA9BW,CAAtB;AAgDA,IAAMG,KAAK,GAAGrB,WAAW,CAAC;EACxBsB,OAAO,EAAE;IACPC,OAAO,EAAErB;EADF,CADe;EAIxBE,KAJwB,mBAIhB;IACN,OAAO;MACLoB,UAAU,EAAE;IADP,CAAP;EAGD,CARuB;EASxBlB,SAAS,EAAE;IACTmB,OADS,mBACDrB,KADC,EACMK,OADN,EACe;MACtBL,KAAK,CAACoB,UAAN,GAAmBf,OAAO,CAACiB,MAA3B;IACD;EAHQ,CATa;EAcxB;EACAb,OAAO,EAAE;IACPc,KADO,iBACDb,OADC,EACQ;MACbA,OAAO,CAACE,MAAR,CAAe,SAAf,EAA0B;QAAEU,MAAM,EAAE;MAAV,CAA1B;IACD,CAHM;IAIPE,MAJO,kBAIAd,OAJA,EAIS;MACdA,OAAO,CAACE,MAAR,CAAe,SAAf,EAA0B;QAAEU,MAAM,EAAE;MAAV,CAA1B;IACD;EANM,CAfe;EAuBxBT,OAAO,EAAE;IACPY,mBADO,+BACazB,KADb,EACoB;MACzB,OAAOA,KAAK,CAACoB,UAAb;IACD;EAHM;AAvBe,CAAD,CAAzB;AA8BA,IAAMM,GAAG,GAAG/B,SAAS,CAACE,GAAD,CAArB;AAEA6B,GAAG,CAACC,GAAJ,CAAQV,KAAR;AAEAS,GAAG,CAACE,KAAJ,CAAU,MAAV"},"metadata":{},"sourceType":"module"}