{"ast":null,"code":"import \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.array.iterator.js\";\nimport \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.promise.js\";\nimport \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.object.assign.js\";\nimport \"/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/node_modules/core-js/modules/es.promise.finally.js\";\nimport { createApp } from \"vue\";\nimport { createStore } from \"vuex\";\nimport App from \"./App.vue\";\nvar store = createStore({\n  state: function state() {\n    return {\n      counter: 0\n    };\n  },\n  mutations: {\n    increment: function increment(state) {\n      state.counter++;\n    },\n    increase: function increase(state, payload) {\n      //el payload puede ser cualquier tipo de dato, objeto, variable, array, etc\n      state.counter = state.counter + payload.value;\n    }\n  },\n  actions: {\n    increment: function increment(context) {}\n  },\n  getters: {\n    finalCounter: function finalCounter(state) {\n      return state.counter;\n    },\n    normalizedCounter: function normalizedCounter(_, getters) {\n      var finalCounter = getters.finalCounter;\n\n      if (finalCounter < 0) {\n        return 0;\n      }\n\n      if (finalCounter > 100) {\n        return 100;\n      }\n\n      return finalCounter;\n    }\n  }\n});\nvar app = createApp(App);\napp.use(store);\napp.mount(\"#app\");","map":{"version":3,"names":["createApp","createStore","App","store","state","counter","mutations","increment","increase","payload","value","actions","context","getters","finalCounter","normalizedCounter","_","app","use","mount"],"sources":["/home/ltizzi/Documentos/l2code/vue/14 - vuex/vuex/src/main.js"],"sourcesContent":["import { createApp } from \"vue\";\nimport { createStore } from \"vuex\";\n\nimport App from \"./App.vue\";\n\nconst store = createStore({\n  state() {\n    return {\n      counter: 0,\n    };\n  },\n  mutations: {\n    increment(state) {\n      state.counter++;\n    },\n    increase(state, payload) {\n      //el payload puede ser cualquier tipo de dato, objeto, variable, array, etc\n      state.counter = state.counter + payload.value;\n    },\n  },\n  actions: {\n    increment(context) {},\n  },\n  getters: {\n    finalCounter(state) {\n      return state.counter;\n    },\n    normalizedCounter(_, getters) {\n      const finalCounter = getters.finalCounter;\n      if (finalCounter < 0) {\n        return 0;\n      }\n      if (finalCounter > 100) {\n        return 100;\n      }\n      return finalCounter;\n    },\n  },\n});\n\nconst app = createApp(App);\n\napp.use(store);\n\napp.mount(\"#app\");\n"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,IAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,KADwB,mBAChB;IACN,OAAO;MACLC,OAAO,EAAE;IADJ,CAAP;EAGD,CALuB;EAMxBC,SAAS,EAAE;IACTC,SADS,qBACCH,KADD,EACQ;MACfA,KAAK,CAACC,OAAN;IACD,CAHQ;IAITG,QAJS,oBAIAJ,KAJA,EAIOK,OAJP,EAIgB;MACvB;MACAL,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,GAAgBI,OAAO,CAACC,KAAxC;IACD;EAPQ,CANa;EAexBC,OAAO,EAAE;IACPJ,SADO,qBACGK,OADH,EACY,CAAE;EADd,CAfe;EAkBxBC,OAAO,EAAE;IACPC,YADO,wBACMV,KADN,EACa;MAClB,OAAOA,KAAK,CAACC,OAAb;IACD,CAHM;IAIPU,iBAJO,6BAIWC,CAJX,EAIcH,OAJd,EAIuB;MAC5B,IAAMC,YAAY,GAAGD,OAAO,CAACC,YAA7B;;MACA,IAAIA,YAAY,GAAG,CAAnB,EAAsB;QACpB,OAAO,CAAP;MACD;;MACD,IAAIA,YAAY,GAAG,GAAnB,EAAwB;QACtB,OAAO,GAAP;MACD;;MACD,OAAOA,YAAP;IACD;EAbM;AAlBe,CAAD,CAAzB;AAmCA,IAAMG,GAAG,GAAGjB,SAAS,CAACE,GAAD,CAArB;AAEAe,GAAG,CAACC,GAAJ,CAAQf,KAAR;AAEAc,GAAG,CAACE,KAAJ,CAAU,MAAV"},"metadata":{},"sourceType":"module"}